#!/bin/bash

get_attribs() {
	local file_stats file_to_test useful_attribs
	if file_to_test=$(realpath "$1") && [[ $2 =~ ^[0-9]+$ ]] ; then
		useful_attribs=$(stat "$file_to_test" -t)
		read -r -a file_stats <<< "${useful_attribs#"$file_to_test"}"
		echo "${file_stats["$2"]}"
	else
		return 1
	fi
}

get_build_uid() {
	get_attribs /workdir 3
}

get_build_gid() {
	get_attribs /workdir 4
}

if NEW_GID=$(get_build_gid) && NEW_UID=$(get_build_uid); then
	# bypass everything if podman is remapping the id to root
	if [ "${NEW_UID}" == "0" ]; then
		if [ "$(id -u)" == "0" ]; then
			exec dumb-init -- "$@"
		else
			echo "Unable to resolve ns mapping!"
		fi
	fi

	# change the uid and gid of developer otherwise
	[ "$NEW_GID" != "$(id -g developer)" ] && groupmod -g "${NEW_GID}" developer
	[ "$NEW_UID" != "$(id -u developer)" ] && usermod -u "${NEW_UID}" developer
else
	echo "Not able to detect UID/GID for remapping!"
fi

if [ -f "/opt/venv/bin/activate" ]; then
	. /opt/venv/bin/activate
fi

if [ "$(id -u)" == "$(id -u developer)" ]; then
	exec dumb-init -- "$@"
else
	exec dumb-init -- gosu developer "$@"
fi
